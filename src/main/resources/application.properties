spring.profiles.active=local
server.port=${SERVER_PORT}

# access to localhost:8080/beans
management.security.enabled=false

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://localhost:5432/springbootdb
spring.datasource.url=${DATASOURCE}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.jdbc.time_zone = UTC
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=validate

# ===============================
# = Project
# ===============================
project.json-files-input-path=${JSON_FILES_INPUT_PATH}

# ===============================
# = Camel
# ===============================
# the name of Camel
#camel.springboot.name=SampleCamel
camel.health.check.routes.enabled=false

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = Kafka
# ===============================
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=127.0.0.1:9092
#spring.kafka.topic=ynot
#spring.kafka.producer.topic=ynot
#spring.kafka.consumer.auto-commit-interval=100
#spring.kafka.producer.bootstrap=localhost:9092
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.enable-auto-commit=true
