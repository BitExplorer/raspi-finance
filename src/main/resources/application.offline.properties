spring.profiles.active=offline
server.port=${SERVER_PORT}

# access to localhost:8080/beans
management.security.enabled=false

# ===============================
# = SSL Setup
# ===============================
# Define a custom port instead of the default 8080
#server.port=8443
# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true
# The format used for the keystore
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.p12
# The password used to generate the certificate
#server.ssl.key-store-password=password
# The alias mapped to the certificate
#server.ssl.key-alias=tomcat

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=${DATASOURCE}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${DATASOURCE_DRIVER}
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# If you want to use the data-h2.sql
spring.datasource.platform=h2
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.jdbc.time_zone = UTC
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=validate

# ===============================
# = Project
# ===============================
project.json-files-input-path=${JSON_FILES_INPUT_PATH}

# ===============================
# = ActiveMQ
# ===============================
#spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.broker-url=ssl://localhost:61617
#spring.activemq.broker-url=stomp+ssl://localhost:61612
spring.activemq.broker-url=ssl://archlinux:61617
spring.activemq.user=
spring.activemq.password=
#spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false
project.queue.receive-timeout=2000
activemq-ssl.beans.enabled=true
activemq-non-ssl.beans.enabled=false

# ===============================
# = SSL
# ===============================
project.ssl.truststore=amq-client_hornsup.ts
project.ssl.truststore-password=monday1
project.ssl.keystore=amq-client_hornsup.ks
project.ssl.keystore-password=monday1

# ===============================
# = Camel
# ===============================
# the name of Camel
#camel.springboot.name=SampleCamel
camel.health.check.routes.enabled=false

# ===============================
# = MongoDB
# ===============================
#spring.data.mongodb.database=${MONGO_DATABASE}
#spring.data.mongodb.host=${MONGO_HOSTNAME}
#spring.data.mongodb.port=${MONGO_PORT}
#spring.data.mongodb.uri=${MONGO_URI}
